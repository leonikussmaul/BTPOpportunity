<mvc:View controllerName="opportunity.opportunity.controller.ObjectPage"
	xmlns:u="sap.uxap"
	xmlns:mvc="sap.ui.core.mvc"
    displayBlock="true"
	xmlns:form="sap.ui.layout.form"
	xmlns:f="sap.f"
	xmlns:l="sap.ui.layout"
	xmlns:t="sap.ui.table"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:suite="sap.suite.ui.commons"
	xmlns:rte="sap.ui.richtexteditor"
	xmlns:grid="sap.ui.layout.cssgrid"
	xmlns:tnt="sap.tnt"
	xmlns:dnd="sap.ui.core.dnd"
	xmlns:dnd-grid="sap.f.dnd"
	xmlns:commons="sap.suite.ui.commons"
>
	<Page id="ObjectPage" showHeader="true" showNavButton="true" navButtonPress="onNavBackPress">
		<content>
			<f:SidePanel id="mySidePanel"  sidePanelResizable="true" sidePanelMinWidth="30rem" sidePanelWidth="20rem" toggle="onToggleSidePanel">
				<f:mainContent>
					<u:ObjectPageLayout id="ObjectPageLayout" showTitleInHeaderContent="true" showEditHeaderButton="true" editHeaderButtonPress="handleEditBtnPress" upperCaseAnchorBar="false">
						<u:headerTitle>
							<u:ObjectPageDynamicHeaderTitle>
								<u:expandedHeading>
									<HBox>
										<Title text="{account}" />
										<Button text="{priority}" visible="{= ${priority} !== null}" type="{path: 'priority', formatter:'.formatter.priortityButton'}" class="sapUiSmallMarginBeginEnd"/>
									</HBox>
								</u:expandedHeading>
								<u:snappedHeading>
									<FlexBox  fitContainer="true" alignItems="Center">
										<Avatar class="sapUiTinyMarginEnd" initials="{path: 'marketUnit', formatter:'.formatter.formatInitials'}"
						 backgroundColor="{path: 'marketUnit', formatter:'.formatter.formatInitialsColor'}"/>
										<Title text="{account}" wrapping="true"/>
									</FlexBox>
								</u:snappedHeading>
								<u:expandedContent>
									<Text text="{
				path: 'opportunityStartDate',
				type: 'sap.ui.model.type.Date',
				formatOptions: {
					style: 'medium'
				}
			}" />
								</u:expandedContent>
								<u:actions>
									<tnt:InfoLabel  text="{topic}" colorScheme="{path:'topic', formatter:'.formatter.topicColorSchemeFormatter'}" visible="{= ${topic} !== null}" class="sapUiSmallMarginEnd"/>
									
									<core:Icon press="onFavoriteObjectPress" tooltip="Favorite Item"
                                                                src="{path: 'isFavorite', formatter: '.formatter.favoriteIconFormatter'}"
                                                                size="1.1rem"
                                                                color="#427cac"/>
									<u:ObjectPageHeaderActionButton icon="sap-icon://delete" text="Delete Item" tooltip="Delete Item" press="onDeleteObjectPress"  />
								</u:actions>
							</u:ObjectPageDynamicHeaderTitle>
						</u:headerTitle>
						<u:headerContent>
							<FlexBox wrap="Wrap">
								<Avatar 
                                    displaySize="L"
                                    press="onAvatarPress" backgroundColor="{path: 'marketUnit', formatter:'.formatter.formatInitialsColor'}"
                                    initials="{path: 'marketUnit', formatter:'.formatter.formatInitials'}"/>
								<l:VerticalLayout class="sapUiSmallMarginBeginEnd sapUiResponsiveMargin">
									<VBox>
										<ObjectStatus state="Information" text="Status" icon="sap-icon://message-information" class="sapUiSmallMarginBegin"/>
										<HBox alignItems="Center" justifyContent="Center" width="100%" >
											<SegmentedButton  selectionChange="onSegmentPressed" id="segmentedStatusObject" width="480px" class="sapUiSmallMarginEnd sapUiSmallMarginBegin" selectedKey="{status}">
												<items>
													<SegmentedButtonItem icon="sap-icon://overlay" text="Opportunity" key="Opportunity" />
													<SegmentedButtonItem icon="sap-icon://flag-2" text="Lead" key="Lead"/>
													<SegmentedButtonItem icon="sap-icon://pause" text="Paused" key="Paused"/>
													<SegmentedButtonItem icon="sap-icon://checklist-item" text="Completed" key="Completed"/>
												</items>
											</SegmentedButton>
										</HBox>
									</VBox>
								</l:VerticalLayout>
								
								<VBox class="sapUiMediumMarginEnd sapUiMediumMarginBottom" visible="{= ${opportunityClosedQuarter} !== null}">
									<Title text="{i18n>opportunityClosedQuarter}" class="sapUiTinyMarginBottom" />
									<ObjectStatus text="{opportunityClosedQuarter}" icon="sap-icon://workflow-tasks" class="sapMObjectStatusLarge" />
								</VBox>
								<VBox class="sapUiSmallMarginBeginEnd" visible="{= ${opportunityValue} !== null}">
									<Title text="{i18n>Value}" class="sapUiTinyMarginBottom" />
									<ObjectNumber class="sapMObjectNumberLarge" state="{path: 'opportunityValue', formatter: '.formatter.numberStateFormatter'}" number="{path: 'opportunityValue', type: 'sap.ui.model.type.Float', formatter: '.formatter.addKAfterNumber', formatOptions: {decimals: 0}}"  unit="EUR" />
								</VBox>
								<VBox class="sapUiMediumMarginBeginEnd" width="20%" visible="{= ${progress} !== null &amp;&amp; !${editModel>/editMode}}">
									<Title text="{i18n>Progress}"  />
									<ProgressIndicator width="100%"
								class="sapUiSmallMarginBottom"
								percentValue="{progress}"
								displayValue="{path: 'progress', formatter: '.formatter.progressPercentage'}"
								showValue="true"
								state="{path: 'progress', formatter: '.formatter.progressStatus'}" />
								</VBox>
								<VBox class="sapUiMediumMarginBeginEnd" width="20%" visible="{= ${editModel>/editMode}}">
									<Title text="{i18n>Progress}"  />
									<Slider value="{progress}" width="100%" step="25" change="onProgressSliderChange"
							min="0" max="100"
							showAdvancedTooltip="true"
							showHandleTooltip="false"
							class="sapUiSmallMarginTop" enableTickmarks="true" />


								</VBox>
							</FlexBox>
						</u:headerContent>
						<!-- section fragments -->
						<u:sections>
							<u:ObjectPageSection id="idGeneralSection" titleUppercase="false" title="General Information" >
								<u:ObjectPageSubSection id="idGeneralSubSection">
									<core:Fragment id="idGeneralFragment" fragmentName="opportunity.opportunity.view.fragments.GeneralSection" type="XML"/>
								</u:ObjectPageSubSection>
							</u:ObjectPageSection>
							<u:ObjectPageSection id="idSectionContact" titleUppercase="false" title="{i18n>Contact}">
								<u:ObjectPageSubSection id="idSubSectionContact">
									<core:Fragment id="idContactFragment" fragmentName="opportunity.opportunity.view.fragments.ContactSection" type="XML"/>
								</u:ObjectPageSubSection>
							</u:ObjectPageSection>

							<u:ObjectPageSection id="idSectionTopics" titleUppercase="false" title="{i18n>Topics}" >
								<u:ObjectPageSubSection id="idSubSectionTopics">
									<u:actions>
										<Link  text="Add Topic" press="onAddTopicPress"/>
									</u:actions>
									<HBox class="sapUiSmallMarginTopBottom" >
										<l:HorizontalLayout id="TopicFiltersObject" allowWrapping="true" class="sapUiResponsiveMargin " content="{}"  >
											<ToggleButton text="{topic}" press="onPressToggle1" class="sapUiSmallMarginEnd" pressed="{parts: [{path: 'pageModel>/topics'}, {path: 'topic'}], formatter: '.formatter.toggleButtonPressed'}"
											enabled="{parts: [{path: 'pageModel>/topics'}, {path: 'topic'}, {path: 'editModel>/editMode'}], formatter: '.formatter.toggleButtonEnabled'}">
												<customData>
													<core:CustomData key="ID" value="{topic}" class="sapUiNoMarginTop sapUiNoMarginBottom"/>
												</customData>
											</ToggleButton>
										</l:HorizontalLayout>
									</HBox>
									 <!-- <u:moreBlocks>
										<Link text="Add Topic" press="onAddTopicLink"/>
									</u:moreBlocks> -->
								</u:ObjectPageSubSection>
							</u:ObjectPageSection>

							<u:ObjectPageSection id="idSectionDeliverables" titleUppercase="false" title="{i18n>Deliverables}" >
								<u:ObjectPageSubSection id="idSubSectionDeliverables">
									<u:actions>
										<Link  text="Add Deliverable" press="onAddDeliverablePress"/>
									</u:actions>
									<HBox class="sapUiSmallMarginTopBottom">
										<l:HorizontalLayout id="DeliverablesFiltersObject" allowWrapping="true" class="sapUiResponsiveMargin " content="{}"  >
											<ToggleButton text="{deliverable}"  press="onPressToggle2"  class="sapUiSmallMarginEnd" pressed="{parts: [{path: 'pageModel>/deliverables'}, {path: 'deliverable'}], formatter: '.formatter.toggleButtonPressed'}"
											enabled="{parts: [{path: 'pageModel>/deliverables'}, {path: 'deliverable'}, {path: 'editModel>/editMode'}], formatter: '.formatter.toggleButtonEnabled'}">
												<customData>
													<core:CustomData key="ID" value="{deliverable}" class="sapUiNoMarginTop sapUiNoMarginBottom"/>
												</customData>
											</ToggleButton>
										</l:HorizontalLayout>
									</HBox>
									 <!-- <u:moreBlocks>
										<Link text="Add Deliverable" press="onAddDeliverableLink"/>
									</u:moreBlocks> -->
								</u:ObjectPageSubSection>
							</u:ObjectPageSection>
							<u:ObjectPageSection id="idSectionNotes" titleUppercase="false" title="{i18n>Notes}" >
								<u:ObjectPageSubSection id="idSubSectionNotes">
									<!-- <core:Fragment id="idNotesFragment" fragmentName="opportunity.opportunity.view.fragments.NotesSection" type="XML"/> -->
									<rte:RichTextEditor 
								value="{noteText}"  
								id="editRTE" 
								height="400px" 
								width="100%" 
								showGroupFont="true" 
								showGroupLink="true" 
								showGroupUndo="true" 
								editable="{editModel>/editMode}" 
								/>
								</u:ObjectPageSubSection>
							</u:ObjectPageSection>
							<!-- <u:ObjectPageSection id="idSmartChartSection" titleUppercase="false" title="{i18n>SmartChart}" ><u:ObjectPageSubSection id="idSmartChartSubSection"><VBox alignItems="Center" alignContent="Center" justifyContent="Center" renderType="Div" visible="{= ${UISwitch>/chart1} ? true : false}"><VBox fitContainer="true" alignItems="Stretch" alignContent="Stretch" justifyContent="Start" renderType="Div" height="500px" width="700px"><core:Fragment id="idSmartChartFragment" fragmentName="opportunity.opportunity.view.fragments.SmartChart" type="XML"/></VBox></VBox></u:ObjectPageSubSection></u:ObjectPageSection> -->
						</u:sections>
					</u:ObjectPageLayout>
				</f:mainContent>
				<f:items>
					<f:SidePanelItem icon="sap-icon://target-group" text="{i18n>ToDos}">
						<!-- <core:Fragment id="ToDosFragment" fragmentName="opportunity.opportunity.view.fragments.ToDosSection" type="XML"/> -->
						<f:GridList
		id="gridList"
		mode="SingleSelectMaster"
		items="{
		path: 'pageModel>/actionItems',
		sorter: {
					path: 'actionPriority',
					descending: false,
					group: true
				}
		}"
		selectionChange="onSelectionChange"
		class="sapUiResponsiveContentPadding"
		sticky="ColumnHeaders,HeaderToolbar"
        >
							<f:dragDropConfig>
								<dnd:DragInfo sourceAggregation="items" />
								<dnd-grid:GridDropInfo targetAggregation="items" dropPosition="Between" dropLayout="Horizontal" drop="onDrop" />
							</f:dragDropConfig>
							<f:headerToolbar>
								<Toolbar >
									<ToolbarSpacer />
									<Button icon="sap-icon://add" tooltip="Add To Do Item" press="onAddToDoPress"/>
									<Button icon="sap-icon://edit" tooltip="Group List" press="onGroupToDoItem"/>
									<Button icon="sap-icon://sort" tooltip="Sort List" press="onSortToDoItem"/>
									<Button icon="sap-icon://filter" tooltip="Filter List" press="onFilterToDoItem"/>
									<Button icon="sap-icon://delete" tooltip="Delete To Do Item" press="onDeleteToDo"/>
									<SearchField  />
								</Toolbar>
							</f:headerToolbar>
							<f:customLayout>
								<grid:GridBasicLayout gridTemplateColumns="repeat(auto-fit, minmax(16rem, 1fr))" gridGap="0.5rem" />
							</f:customLayout>


							<f:GridListItem press="onPress" detailPress="onPress"  highlight="{path:'pageModel>actionPriority', formatter:'.formatter.piorityFormatter'}">
								<VBox height="100%" justifyContent="SpaceBetween" >
									<layoutData>
										<FlexItemData growFactor="1" shrinkFactor="0" />
									</layoutData>
									<VBox class="sapUiSmallMargin">
										<HBox justifyContent="SpaceBetween">
											<Title text="{pageModel>actionTitle}" wrapping="true" />
											<Label visible="{= ${pageModel>actionDueDate} !== null}"
                       text="due {
                             path: 'pageModel>actionDueDate',
                             type: 'sap.ui.model.type.Date',
                             formatOptions: {
                                 relative: true,
                                 relativeScale: 'auto'
                             }
                           }"
                       wrapping="false"
                       class="sapUiTinyMarginBottom" />
										</HBox>
										<!-- 			
            <HBox justifyContent="Start" alignItems="Center"> -->
										<Label text="{pageModel>actionTask}" class="sapUiSmallMarginBottom sapUiSmallMarginTop" width="100%" wrapping="true"/>
										<Avatar src="./images/Sarah.jpeg" displayShape="Circle" customDisplaySize="2.0rem" displaySize="Custom" class="imageDisplayBlock" />
										<Label text="{pageModel>actionOwner}" wrapping="true" />

											<commons:MicroProcessFlow>
				<commons:content>
					<commons:MicroProcessFlowItem />
					<commons:MicroProcessFlowItem state="Warning"/>
					<commons:MicroProcessFlowItem state="Warning"/>
					<commons:MicroProcessFlowItem state="Success"/>
				</commons:content>
			</commons:MicroProcessFlow>

			<VBox>
		<CheckBox text="Option a" selected="true" />
		<CheckBox text="Option b" />
		<CheckBox text="Option c" selected="true" />
		<CheckBox text="Option d" />
		<CheckBox text="Option e" enabled="false" />
		<CheckBox text="Option partially selected" selected="true" partiallySelected="true" />
		<CheckBox text="Warning" valueState="Warning" />
		<CheckBox text="Warning disabled" valueState="Warning" enabled="false" selected="true" />
		<CheckBox text="Error" valueState="Error" />
		<CheckBox text="Error disabled" valueState="Error" enabled="false" selected="true" />
		<CheckBox text="Information" valueState="Information" />
		<CheckBox text="Information disabled" valueState="Information" enabled="false" selected="true" />
		<CheckBox text="Checkbox with wrapping='true' and long text" wrapping="true" width="150px"/>
	</VBox>

									</VBox>
									<OverflowToolbar design="Solid" >
										<ObjectStatus text="{pageModel>actionPriority}" class="sapUiSmallMarginBegin"
                         state="{path:'pageModel>actionPriority', formatter:'.formatter.piorityFormatter'}"
                           visible="{= ${pageModel>actionPriority} !== null}"
                           />
										<ToolbarSpacer />
										<tnt:InfoLabel text="{pageModel>actionTopic}"
                           colorScheme="{path:'pageModel>actionTopic', formatter:'.formatter.topicColorSchemeFormatter'}"
                           visible="{= ${pageModel>actionTopic} !== null}"
                           renderMode="Narrow" />
									</OverflowToolbar>
								</VBox>
							</f:GridListItem>
						</f:GridList>
					</f:SidePanelItem>
				</f:items>
			</f:SidePanel>
		</content>
		<footer>
			<Toolbar>
				<ToolbarSpacer />
				<Button id="Cancel" text="{i18n>cancel}" press="onCancelObjectPress" type="Reject" visible="{editModel>/editMode}"/>
				<Button id="EditBtn" text="{i18n>edit}" press="onEditObjectPress" type="Emphasized" visible="{= !${editModel>/editMode}}"/>
				<Button id="SaveBtn" text="{i18n>save}" press="onSaveObjectPress" type="Success" visible="{editModel>/editMode}" />
			</Toolbar>
		</footer>
	</Page>
</mvc:View>
